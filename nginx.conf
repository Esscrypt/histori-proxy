worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
        worker_connections 768;
        # multi_accept on;
}

http {
        lua_shared_dict prometheus_metrics 10M;

        init_by_lua_block {
            prometheus = require("prometheus").init("prometheus_metrics")
            metric_requests = prometheus:counter("nginx_http_requests_total", "Total number of HTTP requests", {"host", "status"})
            metric_connections = prometheus:gauge("nginx_http_connections", "Number of HTTP connections", {"state"})
        }

        log_by_lua_block {
            metric_requests:inc(1, {ngx.var.host, ngx.var.status})
        }

        limit_req_zone $binary_remote_addr zone=perip_api:10m rate=50r/s;  # For api.histori.xyz (50 requests/second)
        limit_req_zone $binary_remote_addr zone=perip_backend:10m rate=5r/s;  # For backend.histori.xyz (5 requests/second)


        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;

        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
        ssl_prefer_server_ciphers on;
        
        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;

        gzip on;

        include /etc/nginx/conf.d/*.conf;
        include /etc/nginx/sites-enabled/*;
}